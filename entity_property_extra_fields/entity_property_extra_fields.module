<?php

/**
 * @file
 * EntityPropertyExtraFieldsController controller implementation.
 */

define('ENTITY_PROPERTY_EXTRA_FIELDS_KEY', 'extra_fields');

/**
 * Controller for generating extra fields based on property metadata.
 */
class EntityPropertyExtraFieldsController extends EntityDefaultExtraFieldsController {
  /**
   * Implementation of fieldExtraFields() method replace.
   *
   * @see EntityDefaultExtraFieldsController::fieldExtraFields()
   */
  public function fieldExtraFields() {
    $extra_fields = array();

    foreach ($this->propertyInfo['properties'] as $name => $property_info) {
      // Checks if extra fields key exist in entity properties.
      $extra_fields_key_exist = !empty($property_info[ENTITY_PROPERTY_EXTRA_FIELDS_KEY]);

      if ($extra_fields_key_exist) {
        // Separates by context ('display', 'form').
        foreach ($property_info[ENTITY_PROPERTY_EXTRA_FIELDS_KEY] as $context) {

          // Creates the structure to each bundle.
          foreach (array_keys($this->entityInfo['bundles']) as $bundle) {
            $extra_fields[$this->entityType][$bundle][$context][$name] = $this->generateExtraFieldInfo($name, $property_info);
            if (isset($property_info['weight'])) {
              $extra_fields[$this->entityType][$bundle][$context][$name]['weight'] = $property_info['weight'];
            }
          }
        }
      }
    }

    return $extra_fields;
  }
}
